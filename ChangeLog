Thu Aug  3 07:58:14 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-pkgdcl.lisp ("OMG.ORG/PORTABLESERVER"): fixed name case.

Fri Jul 21 09:51:54 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-poa.lisp: Added standard interface for Current object.
 	
Sun Jun 25 17:04:52 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* socket.lisp: new func.
	Added some logging. 

	* clorb-srv.lisp: Moved some stuff to socket.lisp
	
2000-06-25  lenst  <lenst@pc-lennarts>
 
 	* socket.lisp: Added socket accepting code for CMUCL.
	Only blocking version though.

	* local-ir.lisp: Oops. Need absolute_name as initarg for contained.
	
	* clorb-srv.lisp, clorb-srvreq.lisp:
	Remove double colon in format string

2000-06-25  Lennart Staflin  <lenst@t2>

	* clorb-marshal.lisp: Fixs signed/unsigned type declarations.

	* clorb-exceptions.lisp: Change accessor to reader for conditions

	* clorb-options.lisp: Added docstrings

	* test-suite.lisp, test-suit.lisp: rename test-suit to test-suite

	* ec-server.lisp, ns-server.lisp: Update for new interface

	* clorb-sysdcl.lisp, clorb.system: New files..

	* code-gen.lisp: Getting there...

	* test-marshal.lisp: Move macro to own file

	* local-ir.lisp: Getting there ...

	* idef-macros.lisp:
	Removed old macrology for creating interface definitions.
	New macro idef-definitions uses the idef-read function.

	* hello-client.lisp, hello-dynserver.lisp, hello-idl.lisp,
	hello-server.lisp: 
	Some fixes to the Hello World example

	* clorb-unmarshal.lisp:
	When unmarshaling IORs, save all profiles and used specialized proxy
	class if one has been registered.

	* clorb-trie.lisp, clorb-struct.lisp:
	Let ParameterDescription compute type code from TypeDef if type code
	not set.

	* clorb-exceptions.lisp:
	Added :slots keyword arg to define-user-exception

	* clorb-orb.lisp, clorb-srv.lisp, socket.lisp:
	Changed the way sockets and streams are handled. Too avoid blocking on
	reading from an uninteresting socket if the implementation don't
	support all the functions we need.

	* clorb-objkey.lisp:
	Added  oid-to-string (oid),  string-to-oid (string)
	from lisp mapping.
	Also support new object-key format for persistent IOR. New magic
	numbers (all start with ascii codes for C and L, various cases :).

	* clorb-macros.lisp: Remove :id parameter from define-class macro.

	* clorb-util.lisp, clorb-poa.lisp, clorb-servant.lisp, clorb-srvreq.lisp, clorb-iir.lisp, clorb-object.lisp, clorb-request.lisp:
	Interface changes for Lisp mapping

	* clorb-buffer.lisp: Removed unused function

2000-06-14  Lennart Staflin  <lenst@t2>

	* ec-server.lisp: Separate server and client test case

	* ns-server.lisp:
	Use poa-current to find the POA, not servant-default-POA.

	* ns-server.lisp: * ns-server.lisp: use new define-servant.

	* local-ir.lisp: use auto-servant as base not servant. Support for
	using interface-def and operation-def instances in auto-servant
	implementation: methods for find-opdef, opdef-inparam-typecodes,
	opdef-outparam-typecodes.

	* idef-macros.lisp (define-servant): new macro that creates an
	auto-servant class for an interface that can be used almos as a
	skeleton class generated by an IDL-compiler.

	* ec-server.lisp: use new define-servant and remove the multiple
	interface hack.

	* clorb-srvreq.lisp: started writing support for the standard
	interface to ServerRequest.

	* clorb-servant.lisp: Major interface changes bring it closer to
	the spec.
	DynamicImplementation: new class for DSI.
	op:_default_POA: method on servant as standard
	class auto-servant: implements old servant behaviour.

	* clorb-request.lisp: Change struct clorb::named-value into class
	CORBA:NamedValue

	* clorb-poamgr.lisp: Change operations on POAManager to be in the
	op: package.

	* clorb-poa.lisp: change old struct clorb::poa to class
	PortableServer:POA with some changes of slot names and accessors
	to be standard.

	* clorb-opdef.lisp: made methods opdef-outparam-typecodes and
	opdef-inparam-typecodes to allow different opdef implementations
	to be used in servants.

	* clorb-iir.lisp: * clorb-iir.lisp: (find-opdef) made this a method

	* clorb-any.lisp: * clorb-any.lisp: make any-typecode setf-able.
	
	
2000-06-14  Lennart Staflin  <lennarts@infotek.no>

	* Installed patch from Eric Marsden "to make CLORB work on CLISP
	2000-03-06". (Client only)
	
	The main changes are to prefix certain functions with their
	package (eg read-byte-sequence), and adding &allow-other-keys to
	`initialize-instance' functions (otherwise CLISP seals the class
	and doesn't accept any keyword arguments to `make-instance'). I
	also changed `socket-connect' to specify the :element-type, and
	had to fiddle with the ugly ~_ format hack.

Wed Jun 14 06:28:57 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* ns-server.lisp: use new define-servant.
	Use poa-current to find the POA, not servant-default-POA.

	* local-ir.lisp: use auto-servant as base not servant. Support for
 	using interface-def and operation-def instances in auto-servant
 	implementation: methods for find-opdef, opdef-inparam-typecodes,
 	opdef-outparam-typecodes.
	
	* ec-server.lisp: use new define-servant and remove the multiple
	interface hack.

	* idef-macros.lisp (define-servant): new macro that creates an
	auto-servant class for an interface that can be used almos as a
	skeleton class generated by an IDL-compiler.

	* clorb-srvreq.lisp: started writing support for the standard
	interface to ServerRequest.

	* clorb-poamgr.lisp: Change operations on POAManager to be in the
	op: package.

	* clorb-poa.lisp: change old struct clorb::poa to class
	PortableServer:POA with some changes of slot names and accessors
	to be standard.

	* clorb-opdef.lisp: made methods opdef-outparam-typecodes and
	opdef-inparam-typecodes to allow different opdef implementations
	to be used in servants.

	* clorb-iir.lisp: (find-opdef) made this a method

	* clorb-request.lisp: Change struct clorb::named-value into class
	CORBA:NamedValue 

	* clorb-iir.lisp: 

	* clorb-any.lisp: make any-typecode setf-able.

	* clorb-servant.lisp: Major interface changes bring it closer to
	the spec. 
	DynamicImplementation: new class for DSI.
	op:_default_POA: method on servant as standard
	class auto-servant: implements old servant behaviour.

Mon Jun 12 22:22:41 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-servant.lisp: Rename servant-this to op:_this

2000-06-07  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-request.lisp: Some format to mess.

2000-05-23  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-poamgr.lisp: Use new macro to define user exception

	* clorb-pkgdcl.lisp:
	CLISP socket import, plus some more export for features

	* clorb-macros.lisp: Another attempt to deal with CLISP non ansi format

	* clorb-exceptions.lisp: new defmacro define-user-exception

2000-05-20  Lennart Staflin  <lennarts@infotek.no>

	* clorb-macros.lisp (define-method): Don't use package directly in
	generated code.

2000-05-18  Lennart Staflin  <lenst@lysator.liu.se>

       	* Installed patch from Daniel Barlow <dan@telent.net>
	Support for CMUCL:

	* clorb-util.lisp: ORBit fix.

	* clorb-srvreq.lisp: Robustify.

	* clorb.system, clorb-pkgdcl.lisp: Fixes for CMUCL.

	* socket.lisp: new file with socket functions.

	* clorb-orb.lisp: Use new socket functions.

	* clorb-iir.lisp: Some message changes.

	* clorb-sysdcl.lisp, clorb-srv.lisp, clorb-client.lisp:
	Use new socket functions.

Sun Apr 30 10:57:05 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-macros.lisp (clisp-clean-format-string): fixup format
	strings for CLISP, also a shadow format with a macro to call this
	function.

	* clorb-marshal.lisp (marshal-number): don't use compiler macro
	for clisp (does it support compiler macros?)

	* clorb-request.lisp (corba-get-next-respons): rewrite loop to be
	ansi compliant. Added orb as parameter.
	(request-get-response): loop rewrite.

Sat Apr 29 11:42:59 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* local-ir.lisp: remove lisp-symbol and package-for; this will
	have to be handled by the code generator

Wed Apr 26 18:01:52 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-servant.lisp: remove methods slot from servant

Sat Mar 18 09:44:56 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-any.lisp (any-typecode): New actual typecodes according to
	4.20.2.

Fri Mar 17 20:13:02 2000  Lennart Staflin  <lenst@lysator.liu.se>

	* clorb-request.lisp (request-get-response): need to get client in
	every loop iteration to handle forwards correctly.

